# www to non-www redirect -- duplicate content is BAD:
# https://github.com/h5bp/html5-boilerplate/blob/5370479476dceae7cc3ea105946536d6bc0ee468/.htaccess#L362
# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
upstream node {
    server localhost:3000;
}

upstream io {
    ip_hash;
    server localhost:8081;
}

upstream apache {
    server localhost:81;
}

server {
    # don't forget to tell on which port this server listens
    listen [::]:80 deferred;
    listen 80 deferred;

    # listen on the www host
    server_name _ www.ordinodacasa.it ordinodacasa.it;
    # and redirect to the non-www host (declared below)
    return 301 https://www.ordinodacasa.it$request_uri;
}

server {
    listen [::]:80;
    listen 80;
    server_name ordinodacasa.no-ip.org;
    return 301 https://ordinodacasa.no-ip.org$request_uri;
}

server {
    ssl_certificate /etc/ssl/ordinodacasa/certs/root-chain.wildcard.ordinodacasa.it.cert.pem;
    ssl_certificate_key /etc/ssl/ordinodacasa/private/wildcard.ordinodacasa.it.key.pem;

    listen [::]:443 ssl deferred spdy;
    listen 443 ssl deferred spdy;

    # The host name to respond to
    server_name _ ordinodacasa.it www.ordinodacasa.it ordinodacasa.no-ip.org;

    # Path for static files
    root /home/node/deploy/staging/crowdfunding/current/client/dist/;
    index index.html;
    try_files $uri @prerender;
    limit_req zone=one burst=50;
    #Specify a charset
    charset utf-8;

    location @prerender {
        proxy_set_header X-Prerender-Token AcjkGBzJPPpoQC4sH9L7;
        
        set $prerender 0;
        if ($http_user_agent ~* "baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff)") {
            set $prerender 0;
        }
        
        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;
 
        if ($prerender = 1) {
            
            #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $prerender "service.prerender.io";
            rewrite .* /$scheme://$host$request_uri? break;
            proxy_pass http://$prerender;
        }
        if ($prerender = 0) {
            rewrite .* /index.html break;
        }
    }

    location ~ /\. {
        deny all;
    }

    location /request-password-request {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass http://node;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_intercept_errors on;
    }

    location /password-reset {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass http://node;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_intercept_errors on;
    }

    location /reset-password {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass http://node;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_intercept_errors on;
    }

    location /api {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass http://node;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_intercept_errors on;
    }

    location /auth {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass http://node;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_intercept_errors on;
    }

    location /socket.io {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass http://io;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_intercept_errors on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Custom 404 page
    error_page 404 /404.html;

    # Include the basic h5bp config set
    include h5bp/basic.conf;
}
